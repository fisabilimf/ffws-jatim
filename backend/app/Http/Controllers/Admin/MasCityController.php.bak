<?php

namespace App\Http\Controllers\Admin;

use App\Http\Controllers\Controller;
use App\Models\MasCity;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Log;

class MasCityController extends Controller
{
    public function index(Request $request)
    {
        $query = MasCity::query();

        if ($search = $request->get('search')) {
            $query->where(function ($q) use ($search) {
                $q->where('cities_name', 'like', "%{$search}%");
                if (count($fields) > 1) {
                    $q->orWhere('cities_code', 'like', "%{$search}%");
                }
            });
        }

        $items = $query->orderBy('cities_name')->paginate(10)->withQueryString();
        
        // Prepare data for table component
        $tableHeaders = [
            ['key' => 'id', 'label' => 'ID', 'sortable' => true],
            ['key' => 'cities_name', 'label' => 'Cities Name', 'sortable' => true],
            ['key' => 'actions', 'label' => 'Aksi', 'format' => 'actions', 'sortable' => false]
        ];
        
        return view('admin.mas_city.index', compact('items', 'tableHeaders'));
    }

    public function store(Request $request)
    {
        try {
            $validated = $request->validate([
                'cities_name' => 'required|string|max:255|unique:mas_cities,cities_name',
            'cities_code' => 'required|string|max:50|unique:mas_cities,cities_code',
            'regencies_code' => 'required|string|max:50|unique:mas_cities,regencies_code'
            ]);

            $item = MasCity::create($validated);

            return redirect()->route('admin.mas-city.index')
                ->with('success', "Kecamatan '{$item->cities_name}' berhasil ditambahkan.");
                
        } catch (\Illuminate\Validation\ValidationException $e) {
            return redirect()->back()
                ->withErrors($e->validator)
                ->withInput()
                ->with('error', 'Data yang diinput tidak valid. Silakan periksa kembali.');
                
        } catch (\Exception $e) {
            Log::error('Unexpected error when creating kecamatan: ' . $e->getMessage());
            
            return redirect()->back()
                ->withInput()
                ->with('error', 'Terjadi kesalahan tak terduga. Silakan coba lagi.');
        }
    }

    public function update(Request $request, $id)
    {
        try {
            $item = MasCity::findOrFail($id);
            
            $validated = $request->validate([
                'cities_name' => 'required|string|max:255|unique:mas_cities,cities_name',
            'cities_code' => 'required|string|max:50|unique:mas_cities,cities_code',
            'regencies_code' => 'required|string|max:50|unique:mas_cities,regencies_code'
            ]);

            $oldName = $item->cities_name;
            $item->update($validated);

            return redirect()->route('admin.mas-city.index')
                ->with('success', "Kecamatan '{$oldName}' berhasil diperbarui.");
                
        } catch (\Exception $e) {
            Log::error('Unexpected error when updating kecamatan: ' . $e->getMessage());
            
            return redirect()->back()
                ->withInput()
                ->with('error', 'Terjadi kesalahan tak terduga. Silakan coba lagi.');
        }
    }

    public function destroy($id)
    {
        try {
            $item = MasCity::findOrFail($id);
            $itemName = $item->cities_name;
            $item->delete();

            return redirect()->route('admin.mas-city.index')
                ->with('success', "Kecamatan '{$itemName}' berhasil dihapus.");
                
        } catch (\Exception $e) {
            Log::error('Unexpected error when deleting kecamatan: ' . $e->getMessage());
            
            return redirect()->route('admin.mas-city.index')
                ->with('error', 'Terjadi kesalahan tak terduga. Silakan coba lagi.');
        }
    }
}