const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["js/device-components-BT-2M-h3.js","js/react-vendor-DaqBZZGs.js","js/mapbox-vendor-bGD9Ygvt.js","css/mapbox-vendor-BKWjo1HA.css","js/vendor-B-2OfL1z.js"])))=>i.map(i=>d[i]);
import{_ as z}from"./common-components-Bq_ZUrNx.js";import{r as i,j as f}from"./react-vendor-DaqBZZGs.js";import{m as h}from"./mapbox-vendor-bGD9Ygvt.js";import{f as F}from"./services-BwnLzVAF.js";import"./device-components-BT-2M-h3.js";import"./charts-vendor-Dz8ZTeTz.js";import"./vendor-B-2OfL1z.js";const I=i.lazy(()=>z(()=>import("./device-components-BT-2M-h3.js").then(d=>d.m),__vite__mapDeps([0,1,2,3,4]))),G=({tickerData:d,onStationSelect:b,onMapFocus:T,onStationChange:y})=>{const E=i.useRef(null),n=i.useRef(null),g=i.useRef([]),[N,C]=i.useState(null),[r,A]=i.useState([]);i.useEffect(()=>{(async()=>{try{const o=await F();console.log("MapboxMap: Fetched devices:",o?.length||0),console.log("MapboxMap: First device structure:",o?.[0]),A(o)}catch(o){console.error("Failed to fetch devices:",o)}})()},[]);const[p,m]=i.useState({visible:!1,station:null,coordinates:null});i.useEffect(()=>{const e=document.createElement("style");return e.textContent=`
      @keyframes alert-pulse {
        0% { transform: scale(1); opacity: 0.7; }
        50% { transform: scale(1.5); opacity: 0.3; }
        100% { transform: scale(1); opacity: 0.7; }
      }
    `,document.head.appendChild(e),()=>{document.head.removeChild(e)}},[]);const _=e=>{if(!n.current)return;const{lat:o,lng:t,zoom:a,stationId:c,stationName:s}=e;C([t,o]),n.current.flyTo({center:[t,o],zoom:a||14,pitch:45,bearing:-17.6,speed:1.2,curve:1.4,easing:l=>l,essential:!0}),setTimeout(()=>{if(d){const l=d.find(u=>u.id===c);if(l){const u=w(l.name);u&&m({visible:!0,station:l,coordinates:u})}}},800)},S=(e,o)=>{if(console.log(`handleAutoSwitch called with device: ${e?.name||e?.device_name||e?.station_name||"undefined"}, index: ${o}`),!n.current||!e){console.warn("Map or device not available for auto switch");return}let t=null;try{if(e.coordinates&&Array.isArray(e.coordinates))t=e.coordinates,console.log("Using direct coordinates from device object:",t);else if(e.latitude&&e.longitude)t=[parseFloat(e.longitude),parseFloat(e.latitude)],console.log("Using lat/lng from device object:",t);else{const c=e.name||e.device_name||e.station_name;t=w(c),console.log("Looked up coordinates by name:",t)}if(!t){const c=e.name||e.device_name||e.station_name;console.warn("No coordinates found for device:",c);const s=c.toLowerCase();console.log("Attempting fuzzy match with devices:",r.map(u=>u.name||u.device_name||u.station_name));const l=r.find(u=>{const v=u.name||u.device_name||u.station_name;return v.toLowerCase()===s||v.toLowerCase().includes(s)||s.includes(v.toLowerCase())});if(l&&l.latitude&&l.longitude)t=[parseFloat(l.longitude),parseFloat(l.latitude)],console.log("Found coordinates through fuzzy matching:",t);else if(console.error("Still could not find coordinates after fuzzy matching"),r.length>0&&r[0].latitude&&r[0].longitude)t=[parseFloat(r[0].longitude),parseFloat(r[0].latitude)],console.log("Using first device coordinates as fallback:",t);else return}}catch(c){console.error("Error processing device coordinates:",c);return}const a=e.name||e.device_name||e.station_name;console.log("Auto switching to device:",a,"at coordinates:",t,"index:",o),C(t),n.current.flyTo({center:t,zoom:12,pitch:45,bearing:-17.6,speed:1.2,curve:1.4,easing:c=>c,essential:!0}),setTimeout(()=>{m({visible:!0,station:e,coordinates:t})},800),y&&y(e,o)},M=e=>{m(o=>({...o,visible:!1})),b&&b(e)},L=()=>{m(e=>({...e,visible:!1}))},x=e=>{switch(e){case"safe":return"#10B981";case"warning":return"#F59E0B";case"alert":return"#EF4444";default:return"#6B7280"}},k=e=>{const t="white";switch(e){case"safe":return`<svg width="27" height="27" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M9 12L11 14L15 10M21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12Z" stroke="${t}" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>`;case"warning":return`<svg width="27" height="27" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M12 9V13M12 17.0195V17M21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12Z" stroke="${t}" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>`;case"alert":return`<svg width="27" height="27" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M12 7.25V13M12 16.75V16.76M10.29 3.86L1.82 18A2 2 0 0 0 3.55 21H20.45A2 2 0 0 0 22.18 18L13.71 3.86A2 2 0 0 0 10.29 3.86Z" stroke="${t}" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>`;default:return`<svg width="27" height="27" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <circle cx="12" cy="12" r="9" stroke="${t}" stroke-width="2"/>
        </svg>`}},w=e=>{if(!r||r.length===0)return null;let o=r.find(t=>t.name===e||t.device_name===e||t.station_name===e);if(o||(o=r.find(t=>t.name&&t.name.toLowerCase()===e.toLowerCase()||t.device_name&&t.device_name.toLowerCase()===e.toLowerCase()||t.station_name&&t.station_name.toLowerCase()===e.toLowerCase())),o||(o=r.find(t=>{const a=t.name||t.device_name||t.station_name;return a?a.toLowerCase().includes(e.toLowerCase())||e.toLowerCase().includes(a.toLowerCase()):!1})),o&&o.latitude&&o.longitude){const t=[parseFloat(o.longitude),parseFloat(o.latitude)],a=o.name||o.device_name||o.station_name;return console.log(`Found coordinates for "${e}":`,t),console.log(`Matched to device: "${a}"`),t}return console.warn(`Coordinates not found for station: "${e}"`),console.log("Available devices:",r.map(t=>t.name||t.device_name||t.station_name||"unnamed").join(", ")),null};return i.useEffect(()=>(window.mapboxAutoFocus=_,()=>{window.mapboxAutoFocus&&delete window.mapboxAutoFocus}),[d]),i.useEffect(()=>(console.log("=== REGISTERING MAPBOX AUTO SWITCH FUNCTION ==="),console.log("Map instance available:",!!n.current),console.log("Devices available:",r.length),window.mapboxAutoSwitch=(e,o)=>{const t=e?.name||e?.device_name||e?.station_name;console.log("MapboxMap: mapboxAutoSwitch called with device:",t,"index:",o);try{if(!e){console.error("Error: Device is undefined or null"),document.dispatchEvent(new CustomEvent("autoSwitchError",{detail:{error:"Device is undefined or null",type:"validation_error",device:e,index:o}}));return}if(!n.current){console.error("Error: Map is not initialized yet"),document.dispatchEvent(new CustomEvent("autoSwitchError",{detail:{error:"Map is not initialized yet",type:"map_not_ready",device:e,index:o}}));return}const a=e.coordinates&&Array.isArray(e.coordinates)&&e.coordinates.length===2,c=e.latitude&&e.longitude&&!isNaN(parseFloat(e.latitude))&&!isNaN(parseFloat(e.longitude)),s=w(t);if(!(a||c||s)){console.error("Error: No valid coordinates found for device:",t),console.log("Device data:",e),console.log("Direct coordinates:",e.coordinates),console.log("Lat/Lng:",e.latitude,e.longitude),console.log("Lookup coordinates:",s),document.dispatchEvent(new CustomEvent("autoSwitchError",{detail:{error:"No valid coordinates found",type:"coordinate_error",device:e,index:o}}));return}S(e,o),document.dispatchEvent(new CustomEvent("autoSwitchSuccess",{detail:{device:e,index:o,timestamp:Date.now()}}))}catch(a){console.error("Unexpected error in mapboxAutoSwitch:",a),document.dispatchEvent(new CustomEvent("autoSwitchError",{detail:{error:a.message,type:"unexpected_error",device:e,index:o,stack:a.stack}}))}},console.log("Window mapboxAutoSwitch status:",typeof window.mapboxAutoSwitch=="function"?"Available":"Not available"),console.log("Available devices:",r.length),console.log("Available ticker data:",d?.length||0),console.log("=== MAPBOX AUTO SWITCH FUNCTION REGISTERED ==="),()=>{}),[r,d]),i.useEffect(()=>()=>{window.mapboxAutoSwitch&&(delete window.mapboxAutoSwitch,console.log("mapboxAutoSwitch function removed from window object during unmount"))},[]),i.useEffect(()=>{if(h.accessToken||(h.accessToken="pk.eyJ1IjoiZGl0b2ZhdGFoaWxsYWgxIiwiYSI6ImNtZjNveGloczAwNncya3E1YzdjcTRtM3MifQ.kIf5rscGYOzvvBcZJ41u8g"),n.current)return;n.current=new h.Map({container:E.current,style:"mapbox://styles/mapbox/streets-v12",center:[112.5,-7.5],zoom:8,pitch:45,bearing:-17.6,antialias:!0}),n.current.addControl(new h.ScaleControl,"bottom-left");const e=o=>{console.log(`Map interaction detected: ${o}`);const t=new CustomEvent("userInteraction",{detail:{source:o}});document.dispatchEvent(t)};return n.current.on("dragstart",()=>e("mapDrag")),n.current.on("zoomstart",()=>e("mapZoom")),n.current.on("click",()=>e("mapClick")),()=>{n.current&&(n.current.remove(),n.current=null)}},[]),i.useEffect(()=>{const e=t=>{console.log("MapboxMap: Auto switch activated event received",t.detail),typeof window.mapboxAutoSwitch!="function"&&(console.error("WARNING: mapboxAutoSwitch function not available when auto switch activated"),n.current&&(console.log("Re-registering mapboxAutoSwitch function"),window.mapboxAutoSwitch=(a,c)=>{console.log("Re-registered mapboxAutoSwitch called with:",a?.name),S(a,c)})),document.dispatchEvent(new CustomEvent("mapboxReadyForAutoSwitch",{detail:{ready:!0,devicesCount:r.length,hasMapInstance:!!n.current}}))},o=t=>{console.log("MapboxMap: Auto switch deactivated event received",t.detail)};return document.addEventListener("autoSwitchActivated",e),document.addEventListener("autoSwitchDeactivated",o),()=>{document.removeEventListener("autoSwitchActivated",e),document.removeEventListener("autoSwitchDeactivated",o)}},[r]),i.useEffect(()=>{!n.current||!d||!r.length||(g.current.forEach(e=>{e&&e.remove&&e.remove()}),g.current=[],d.forEach(e=>{const o=w(e.name);if(o)try{const t=document.createElement("div");t.className="custom-marker",t.style.width="27px",t.style.height="27px",t.style.borderRadius="50%",t.style.backgroundColor=x(e.status),t.style.border="3px solid white",t.style.boxShadow="0 4px 8px rgba(0,0,0,0.4)",t.style.cursor="pointer",t.style.zIndex="10",t.style.display="flex",t.style.alignItems="center",t.style.justifyContent="center";const a=k(e.status);if(t.innerHTML=a,e.status==="alert"){const s=document.createElement("div");s.style.position="absolute",s.style.width="100%",s.style.height="100%",s.style.borderRadius="50%",s.style.backgroundColor=x(e.status),s.style.opacity="0.7",s.style.animation="alert-pulse 2s infinite",s.style.zIndex="-1",t.appendChild(s)}const c=new h.Marker(t).setLngLat(o).addTo(n.current);g.current.push(c),t.addEventListener("click",s=>{s.stopPropagation(),n.current.flyTo({center:o,zoom:12,pitch:45,bearing:-17.6,speed:1.2,curve:1.4,easing:u=>u,essential:!0}),m({visible:!0,station:e,coordinates:o});const l=new CustomEvent("userInteraction",{detail:{source:"mapMarker",stationId:e.id}});document.dispatchEvent(l)})}catch(t){console.error("Error creating marker for station:",e.name,t)}}))},[d,r]),i.useEffect(()=>{const e=o=>{p.visible&&!o.target.closest(".custom-marker")&&!o.target.closest(".mapboxgl-popup-content")&&!o.target.closest(".map-tooltip")&&m(t=>({...t,visible:!1}))};return document.addEventListener("click",e),()=>{document.removeEventListener("click",e)}},[p.visible]),f.jsxs("div",{className:"w-full h-screen overflow-hidden relative z-0",children:[f.jsx("div",{ref:E,className:"w-full h-full relative z-0"}),f.jsx(i.Suspense,{fallback:null,children:f.jsx(I,{map:n.current,station:p.station,isVisible:p.visible,coordinates:p.coordinates,onShowDetail:M,onClose:L})})]})};export{G as default};
